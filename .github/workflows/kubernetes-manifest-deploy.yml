on:
  workflow_call:
    inputs:
      runner-type:
        required: false
        type: string
        default: self-hosted
      manifest-file:
        required: true
        type: string

env:
  CLIENT_CERT_DATA: ${{ secrets.KUBE_CLIENT_CERT_DATA }}
  CLIENT_KEY_DATA: ${{ secrets.KUBE_CLIENT_KEY_DATA }}
  CLUSTER_CA_CERT_DATA: ${{ secrets.KUBE_CLUSTER_CA_CERT_DATA }}
  SERVER_KUBE_PORT: ${{ vars.SERVER_KUBE_PORT }}
  SERVER_BASE_DOMAIN: ${{ vars.SERVER_BASE_DOMAIN }}

jobs:
  deploy-kubernetes-manifest:
    runs-on: ${{ inputs.runner-type }}

    steps:
      - name: "Repo checkout"
        uses: actions/checkout@v4
      - name: "Add cluster CA certificate"
        run: "echo $CLUSTER_CA_CERT_DATA > cluster.cert.pem && sudo mkdir /usr/local/share/ca-certificates/extra && sudo cp cluster.cert.pem /usr/local/share/ca-certificates/extra/cluster.cert.crt && sudo update-ca-certificates"
      - name: "Setup node"
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: "Generate and install kubeconfig"
        working-directory: ./terraform
        run: |
          ./cluster-config-write.sh
          mkdir ~/.kube
          cp cluster.yml ~/.kube/config
      - name: "Setup kubectl"
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.4'
      - name: "Connect to Tailnet"
        if: "${{ ('self-hosted' != inputs.runner-type) }}"
        uses: tailscale/github-action@v2
        with:
          version: '1.58.2'
          oauth-client-id: ${{ secrets.TAILSCALE_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_CLIENT_SECRET }}
          tags: tag:github-org-runner
          args: "--exit-node k3s"
      - name: "Apply manifest"
        run: "kubectl apply -f ${{ inputs.manifest-file }}"
