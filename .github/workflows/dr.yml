name: Disaster Recovery
on:
  workflow_dispatch:

jobs:
  deploy-tf-state-namespace:
    uses: ./.github/workflows/kubernetes-manifest-deploy.yml
    secrets: inherit

    with:
      manifest-file: ./terraform/tf-state-namespace.yml
      runner-type: ubuntu-latest

  # if not a clean cluster: need to remove storageclasses and volumesnapshotclasses to enable openebs install
  # kubectl delete storageclass default openebs-device openebs-hostpath openebs-zfs-localpv-bulk openebs-zfs-localpv-bulk-no-backup openebs-zfs-localpv-general openebs-zfs-localpv-general-no-backup openebs-zfs-localpv-random openebs-zfs-localpv-random-no-backup
  # kubectl delete volumesnapshotclass openebs-zfs-localpv

  deploy-openebs:
    needs: [
      deploy-tf-state-namespace,
    ]
    uses: ./.github/workflows/kubernetes-terraform-deploy.yml
    secrets: inherit

    with:
      terraform-dir: ./terraform/openebs
      runner-type: ubuntu-latest

  deploy-github-org-runner:
    needs: [
      deploy-tf-state-namespace,
    ]
    uses: ./.github/workflows/kubernetes-terraform-deploy.yml
    secrets: inherit

    with:
      terraform-dir: ./terraform/github-org-runners
      runner-type: ubuntu-latest

  deploy-velero:
    needs: [
      deploy-tf-state-namespace,
    ]
    uses: ./.github/workflows/kubernetes-terraform-deploy.yml
    secrets: inherit

    with:
      terraform-dir: ./terraform/velero
      runner-type: ubuntu-latest
      extra-variable: is_restore_mode=true

  do-velero-restore:
    needs: [
      deploy-velero,
    ]
    uses: ./.github/workflows/kubernetes-terraform-deploy.yml
    secrets: inherit

    with:
      terraform-dir: ./terraform/velero-restore

  restart-databases:
    needs: [
      do-velero-restore,
    ]
    uses: ./.github/workflows/cnpg-database-hibernate.yml
    secrets: inherit

    strategy:
      fail-fast: false
      matrix:
        # it would be nice to dynamically find these
        database:
          - name: "keycloak-db"
            namespace: "keycloak"
          - name: "vaultwarden-db"
            namespace: "vaultwarden"
          - name: "outline-db"
            namespace: "outline"
          - name: "penpot-db"
            namespace: "penpot"

    with:
      database-name: ${{ matrix.database.name }}
      database-namespace: ${{ matrix.database.namespace }}
      do-hibernate: false

  run-deploy:
    needs: [
      restart-databases,
    ]
    uses: ./.github/workflows/deploy.yml
    secrets: inherit
