name: deploy
on:
  push:
    branches:
      - 'trunk'

env:
  KUBE_CLIENT_CERT_DATA: ${{ secrets.KUBE_CLIENT_CERT_DATA }}
  KUBE_CLIENT_KEY_DATA: ${{ secrets.KUBE_CLIENT_KEY_DATA }}
  KUBE_CLUSTER_CA_CERT_DATA: ${{ secrets.KUBE_CLUSTER_CA_CERT_DATA }}
  SERVER_KUBE_PORT: ${{ vars.SERVER_KUBE_PORT }}
  TF_VARS_server_base_domain: ${{ vars.TF_VARS_server_base_domain }}
  TF_VARS_jdc_projects_runners_app_id: ${{ vars.TF_VARS_jdc_projects_runners_app_id }}
  TF_VARS_jdc_projects_runners_app_installation_id: ${{ vars.TF_VARS_jdc_projects_runners_app_installation_id }}
  TF_VARS_jdc_projects_runners_app_private_key: ${{ secrets.TF_VARS_jdc_projects_runners_app_private_key }}
  TF_VARS_cloudflare_acme_token: ${{ secrets.TF_VARS_cloudflare_acme_token }}

jobs:
  deploy-foundational-services-part1:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./terraform/foundation/part1

    steps:
      - name: "Repo checkout"
        uses: actions/checkout@v3
      - name: "Terraform setup"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2
      - name: "Generate kubeconfig"
        working-directory: ./terraform
        run: "./cluster-config-write.sh"
      # - name: "Create terraform-state namespace"
      #   uses: actions-hub/kubectl@master
      #   env:
      #     KUBE_CONFIG: ../../config.yml
      #   with:
      #     args: apply -f ./terraform-state-namespace.yml
      - name: "Debug cat out"
        working-directory: ./terraform
        run: cat ./cluster.yml
      - name: "Terraform format check"
        run: "terraform fmt -check"
      - name: "Terraform init"
        run: "terraform init"
      - name: "Terraform apply"
        run: "terraform apply -auto-approve -input=false"

  deploy-foundational-services-part2:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./terraform/foundation/part2

    needs: deploy-foundational-services-part1

    steps:
      - name: "Repo checkout"
        uses: actions/checkout@v3
      - name: "Terraform setup"
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.4.2
      - name: "Terraform format check"
        run: "terraform fmt -check"
      - name: "Terraform init"
        run: "terraform init"
      - name: "Terraform apply"
        run: "terraform apply -auto-approve -input=false"
