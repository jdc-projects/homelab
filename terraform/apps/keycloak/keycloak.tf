resource "null_resource" "keycloak_domain" {
  triggers = {
    keycloak_domain = "idp.${var.server_base_domain}"
  }
}

resource "helm_release" "keycloak" {
  name      = "keycloak"
  namespace = kubernetes_namespace.keycloak_namespace.metadata[0].name

  repository = "oci://registry-1.docker.io/bitnamicharts"
  chart      = "keycloak"
  version    = "15.1.6"

  timeout = 300

  set {
    name  = "auth.adminUser"
    value = random_password.keycloak_admin_username.result
  }
  set {
    name  = "auth.adminPassword"
    value = random_password.keycloak_admin_password.result
  }

  set {
    name  = "tls.enabled"
    value = "true"
  }
  set {
    name  = "tls.autoGenerated"
    value = "true"
  }

  set {
    name  = "production"
    value = "true"
  }

  set {
    name  = "proxy"
    value = "reencrypt"
  }

  set {
    name  = "extraStartupArgs"
    value = "\"-Dkeycloak.profile.feature.script=enabled\""
  }

  set {
    name  = "service.http.enabled"
    value = "false"
  }

  set {
    name  = "ingress.enabled"
    value = "true"
  }
  set {
    name  = "ingress.hostname"
    value = null_resource.keycloak_domain.triggers.keycloak_domain
  }
  set {
    name  = "ingress.servicePort"
    value = "https"
  }

  set {
    name  = "postgres.auth.postgresPassword"
    value = random_password.db_admin_password.result
  }
}

resource "null_resource" "keycloak_liveness_check" {
  triggers = {
    always_run = timestamp()
  }

  provisioner "local-exec" {
    command = "timeout 300 bash -c 'while ! curl -sfI https://${null_resource.keycloak_domain.triggers.keycloak_domain}; do echo \"Waiting for Keycloak to be live.\" && sleep 1; done'"
  }

  depends_on = [helm_release.keycloak]
}
